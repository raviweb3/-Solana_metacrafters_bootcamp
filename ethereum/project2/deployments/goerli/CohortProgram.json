{
  "address": "0xABD2888971be81Ca62dF56F57d7e826D402d78AB",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "availableSpots",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllParticipants",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dateOfJoining",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "summary",
              "type": "string"
            },
            {
              "internalType": "enum CohortProgram.Level",
              "name": "knowledgeLevel",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "rollNo",
              "type": "uint256"
            }
          ],
          "internalType": "struct CohortProgram.Participant[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParticipant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dateOfJoining",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "summary",
              "type": "string"
            },
            {
              "internalType": "enum CohortProgram.Level",
              "name": "knowledgeLevel",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "rollNo",
              "type": "uint256"
            }
          ],
          "internalType": "struct CohortProgram.Participant",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "summary",
          "type": "string"
        },
        {
          "internalType": "enum CohortProgram.Level",
          "name": "knowLevel",
          "type": "uint8"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa17f5c5c539df0dd415f5ed8656960cf1a781e6c1ccd4c812da777770eb59fc4",
  "receipt": {
    "to": null,
    "from": "0x9680A866299a8D021114Ac6A460Ba8e5860B68Fb",
    "contractAddress": "0xABD2888971be81Ca62dF56F57d7e826D402d78AB",
    "transactionIndex": 65,
    "gasUsed": "968542",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc6291fde767762489b9d8b598ac9cf62ac7e1c4e2d8a8986ddf9ecf553296e58",
    "transactionHash": "0xa17f5c5c539df0dd415f5ed8656960cf1a781e6c1ccd4c812da777770eb59fc4",
    "logs": [],
    "blockNumber": 8189375,
    "cumulativeGasUsed": "8039359",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d53262bb8823b0b2d97c13fc10be7aec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"availableSpots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipants\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dateOfJoining\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"enum CohortProgram.Level\",\"name\":\"knowledgeLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"rollNo\",\"type\":\"uint256\"}],\"internalType\":\"struct CohortProgram.Participant[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParticipant\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dateOfJoining\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"enum CohortProgram.Level\",\"name\":\"knowledgeLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"rollNo\",\"type\":\"uint256\"}],\"internalType\":\"struct CohortProgram.Participant\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"enum CohortProgram.Level\",\"name\":\"knowLevel\",\"type\":\"uint8\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CohortProgram.sol\":\"CohortProgram\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CohortProgram.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n\\ncontract CohortProgram{\\n    uint private s_maxParticipants;\\n    uint private s_NoOfParticipants;\\n\\n    enum Level{\\n        Beginner,\\n        Intermediate,\\n        Expert\\n    }\\n\\n    struct Participant {\\n        uint256 dateOfJoining;\\n        string name;\\n        string summary;\\n        Level  knowledgeLevel;\\n        uint   rollNo;\\n    }\\n   \\n    mapping(address=>Participant) s_participants;\\n   \\n\\n    Participant[] s_allParticipants;\\n\\n    constructor(){\\n        s_maxParticipants = 30;\\n    }\\n\\n    function register(string memory name, string memory summary, Level knowLevel) public returns(uint) {\\n       require(s_NoOfParticipants < s_maxParticipants,\\\"Registration is closed\\\");\\n       \\n       s_NoOfParticipants = s_NoOfParticipants + 1;\\n       Participant memory p = Participant(block.timestamp,name,summary,knowLevel,s_NoOfParticipants);\\n    \\n       s_participants[msg.sender] = p;\\n       s_allParticipants.push(p);\\n    \\n       return s_NoOfParticipants;\\n    }\\n\\n    // Returns all participants\\n    function getAllParticipants() public view returns(Participant[] memory){\\n        return s_allParticipants;\\n    }\\n   \\n    // Get details of the current user\\n    function getParticipant() public view returns(Participant memory){\\n        return s_participants[msg.sender];\\n    } \\n\\n    function availableSpots() public view returns(uint){\\n        return s_maxParticipants - s_NoOfParticipants;\\n    }\\n}\",\"keccak256\":\"0xa90a52cd92285f839da52658af1225ba353c99467602f47f0293cf7cc8384858\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/CohortProgram.sol:CohortProgram",
        "label": "s_maxParticipants",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5,
        "contract": "contracts/CohortProgram.sol:CohortProgram",
        "label": "s_NoOfParticipants",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 26,
        "contract": "contracts/CohortProgram.sol:CohortProgram",
        "label": "s_participants",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Participant)21_storage)"
      },
      {
        "astId": 30,
        "contract": "contracts/CohortProgram.sol:CohortProgram",
        "label": "s_allParticipants",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Participant)21_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Participant)21_storage)dyn_storage": {
        "base": "t_struct(Participant)21_storage",
        "encoding": "dynamic_array",
        "label": "struct CohortProgram.Participant[]",
        "numberOfBytes": "32"
      },
      "t_enum(Level)9": {
        "encoding": "inplace",
        "label": "enum CohortProgram.Level",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Participant)21_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CohortProgram.Participant)",
        "numberOfBytes": "32",
        "value": "t_struct(Participant)21_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Participant)21_storage": {
        "encoding": "inplace",
        "label": "struct CohortProgram.Participant",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/CohortProgram.sol:CohortProgram",
            "label": "dateOfJoining",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/CohortProgram.sol:CohortProgram",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 15,
            "contract": "contracts/CohortProgram.sol:CohortProgram",
            "label": "summary",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/CohortProgram.sol:CohortProgram",
            "label": "knowledgeLevel",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(Level)9"
          },
          {
            "astId": 20,
            "contract": "contracts/CohortProgram.sol:CohortProgram",
            "label": "rollNo",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}